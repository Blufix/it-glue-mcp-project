"""Initial schema

Revision ID: 23ad7dcf2579
Revises: 
Create Date: 2025-08-30 12:17:41.973093

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '23ad7dcf2579'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cache_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cache_key', sa.String(), nullable=False),
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('source_ids', sa.JSON(), nullable=True),
    sa.Column('hits', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cache_expiry', 'cache_entries', ['expires_at'], unique=False)
    op.create_index(op.f('ix_cache_entries_cache_key'), 'cache_entries', ['cache_key'], unique=True)
    op.create_table('embedding_queue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_queue_status', 'embedding_queue', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_embedding_queue_entity_id'), 'embedding_queue', ['entity_id'], unique=False)
    op.create_table('itglue_entities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('itglue_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('organization_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('relationships', sa.JSON(), nullable=True),
    sa.Column('search_text', sa.Text(), nullable=True),
    sa.Column('embedding_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_synced', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_org_type', 'itglue_entities', ['organization_id', 'entity_type'], unique=False)
    op.create_index('idx_search', 'itglue_entities', ['search_text'], unique=False)
    op.create_index(op.f('ix_itglue_entities_entity_type'), 'itglue_entities', ['entity_type'], unique=False)
    op.create_index(op.f('ix_itglue_entities_itglue_id'), 'itglue_entities', ['itglue_id'], unique=True)
    op.create_index(op.f('ix_itglue_entities_organization_id'), 'itglue_entities', ['organization_id'], unique=False)
    op.create_table('query_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('response', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('source_ids', sa.JSON(), nullable=True),
    sa.Column('response_time_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sync_status',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('last_sync_started', sa.DateTime(), nullable=True),
    sa.Column('last_sync_completed', sa.DateTime(), nullable=True),
    sa.Column('last_sync_status', sa.String(), nullable=True),
    sa.Column('records_synced', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_type')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sync_status')
    op.drop_table('query_logs')
    op.drop_index(op.f('ix_itglue_entities_organization_id'), table_name='itglue_entities')
    op.drop_index(op.f('ix_itglue_entities_itglue_id'), table_name='itglue_entities')
    op.drop_index(op.f('ix_itglue_entities_entity_type'), table_name='itglue_entities')
    op.drop_index('idx_search', table_name='itglue_entities')
    op.drop_index('idx_org_type', table_name='itglue_entities')
    op.drop_table('itglue_entities')
    op.drop_index(op.f('ix_embedding_queue_entity_id'), table_name='embedding_queue')
    op.drop_index('idx_queue_status', table_name='embedding_queue')
    op.drop_table('embedding_queue')
    op.drop_index(op.f('ix_cache_entries_cache_key'), table_name='cache_entries')
    op.drop_index('idx_cache_expiry', table_name='cache_entries')
    op.drop_table('cache_entries')
    # ### end Alembic commands ###